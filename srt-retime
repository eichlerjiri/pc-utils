#!/usr/bin/env python
import os
import re
import shutil
import sys
import tempfile

def fatal(str):
	print('\033[91m' + str + '\033[0m', file=sys.stderr)
	sys.exit(1)

def toFullMillis(hours, minutes, secs, millis):
	return int(millis) + 1000 * (int(secs) + 60 * (int(minutes) + (60 * int(hours))))

def toSrt(fullMillis):
	millis = fullMillis
	secs = millis // 1000
	minutes = secs // 60
	hours = minutes // 60
	millis %= 1000
	secs %= 60
	minutes %= 60
	return b'%02i:%02i:%02i,%03i' % (hours, minutes, secs, millis)

if len(sys.argv) < 2:
	print('Usage: %s [from, to] <command> <SRT file to edit>\n\n'
		'command:\n'
		'    +<millis>    forward subtitles for amount of milliseconds\n'
		'    -<millis>    backward subtitles for amount of milliseconds\n\n'
		'from, to:\n'
		'    from:<seconds>    time index from which do retime (optional)\n'
		'    to:<seconds>    time index to which do retime (optional)'
	% sys.argv[0], file=sys.stderr)
	sys.exit()

if len(sys.argv) < 3:
	fatal('Missing arguments')

i = 1

millisFrom = -1
millisTo = -1
while i < len(sys.argv) - 2:
	m = re.match('^(from|to):([0-9]+)$', sys.argv[i])
	i += 1
	if not m:
		break
	if m.group(1) == 'from':
		millisFrom = int(m.group(2)) * 1000
	else:
		millisTo = int(m.group(2)) * 1000

command = re.match('^[-+][0-9]+$', sys.argv[i])
if not command:
	fatal('Invalid command')
diff = int(sys.argv[i])
i += 1

infile = open(sys.argv[i], 'rb')
outfile = tempfile.NamedTemporaryFile('wb', delete=False)
outname = outfile.name
try:
	state = 0
	linenum = 0
	while True:
		line = infile.readline()
		if line == b'':
			break
		linenum += 1

		if state == 0:
			if not re.match(b'^[0-9]+[\r\n]*$', line):
				fatal('Invalid format, line number: %i' % linenum)
			state = 1
		elif state == 1:
			m = re.match(b'^([0-9]{2}):([0-9]{2}):([0-9]{2}),([0-9]{3,4}) --> ([0-9]{2}):([0-9]{2}):([0-9]{2}),([0-9]{3,4})([\r\n]*)$', line)
			if not m:
				fatal('Invalid format, line number: %i' % linenum)

			millis1 = toFullMillis(m.group(1), m.group(2), m.group(3), m.group(4))
			millis2 = toFullMillis(m.group(5), m.group(6), m.group(7), m.group(8))

			if (millisFrom == -1 or millisFrom <= millis1) and (millisTo == -1 or millisTo > millis1):
				millis1 += diff
				millis2 += diff

			line = b'%s --> %s%s' % (toSrt(millis1), toSrt(millis2), m.group(9))
			state = 2
		elif state == 2 and re.match(b'^[\r\n]*$', line):
			state = 0

		outfile.write(line)

	outfile.close()
	infile.close()

	shutil.copy(outname, sys.argv[i])
finally:
	os.remove(outname)
